buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // 'com.android.tools.build:gradle:7.3.1'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

// Enable the new publishing mechanism
// Set property to disable deprecated software components warning
def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def DEFAULT_COMPILE_SDK_VERSION = 33
def DEFAULT_MIN_SDK_VERSION = 21
def DEFAULT_TARGET_SDK_VERSION = 33

android {
  compileSdkVersion safeExtGet('compileSdkVersion', DEFAULT_COMPILE_SDK_VERSION)
  // Remove buildToolsVersion to let Gradle plugin select the appropriate version

  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion', DEFAULT_MIN_SDK_VERSION)
    targetSdkVersion safeExtGet('targetSdkVersion', DEFAULT_TARGET_SDK_VERSION)
    versionCode 1
    versionName "1.0"
    consumerProguardFiles 'lib-proguard-rules.txt'
  }
  lintOptions {
    abortOnError false
  }
}

repositories {
    google()
    mavenCentral()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$projectDir/../node_modules/react-native/android"
    }
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.+'
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
}

def configureReactNativePom(def pom) {
    def packageJson = new groovy.json.JsonSlurper().parseText(file('../package.json').text)

    pom.project {
        name packageJson.title
        artifactId packageJson.name
        version = packageJson.version
        group = "cn.bookln.rn.imagecropper"
        description packageJson.description
        url packageJson.repository.baseUrl

        licenses {
            license {
                name packageJson.license
                url packageJson.repository.baseUrl + '/blob/master/' + packageJson.licenseFilename
                distribution 'repo'
            }
        }

        developers {
            developer {
                id packageJson.author.username
                name packageJson.author.name
            }
        }
    }
}

afterEvaluate { project ->

    task androidJavadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        // += project.files(android.getBootClasspath().join(File.pathSeparator))
        // Don't try to access any configurations directly
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
        include '**/*.java'
    }

    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
        archiveClassifier.set('javadoc')
        from androidJavadoc.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
        include '**/*.java'
    }

    android.libraryVariants.all { variant ->
        def name = variant.name.capitalize()
        // Update to use the provider API for Gradle 7+
        task "jar${name}"(type: Jar, dependsOn: variant.javaCompileProvider) {
            from variant.javaCompileProvider.get().destinationDirectory
        }
    }

    // Replace old Upload task with modern publishing configuration
    publishing {
        publications {
            release(MavenPublication) {
                // Reference the AAR output directly instead of using components.release
                afterEvaluate {
                    artifact bundleReleaseAar
                }
                
                // Include additional artifacts
                artifact androidSourcesJar
                artifact androidJavadocJar
                
                // Configure POM
                groupId = "cn.bookln.rn.imagecropper"
                artifactId = "react-native-yunti-image-cropper"
                version = "1.0.0"
                
                // Use a safer approach for POM configuration
                pom.withXml {
                    def root = asNode()
                    root.appendNode('name', 'React Native Yunti Image Cropper')
                    root.appendNode('description', 'Image cropper for React Native')
                    
                    def licensesNode = root.appendNode('licenses')
                    def licenseNode = licensesNode.appendNode('license')
                    licenseNode.appendNode('name', 'MIT')
                    licenseNode.appendNode('distribution', 'repo')
                    
                    def developersNode = root.appendNode('developers')
                    def developerNode = developersNode.appendNode('developer')
                    developerNode.appendNode('id', 'bookln')
                    developerNode.appendNode('name', 'bookln')
                }
            }
        }
        
        repositories {
            maven {
                // Deploy to maven directory
                url = uri("${projectDir}/../android/maven")
            }
        }
    }
}
